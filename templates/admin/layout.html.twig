{# templates/admin/layout.html.twig #}
{% extends '@SonataTranslation/standard_layout.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/quill-emoji@0.1.8/dist/quill-emoji.css" rel="stylesheet">
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/quill-emoji@0.1.8/dist/quill-emoji.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Register emoji module
            Quill.register('modules/emoji', window.QuillEmoji);

            // Wait for Sonata to be loaded
            setTimeout(function() {
                initQuillEditors();
            }, 100);

            // Reinitialize on dynamic additions (Sonata collections)
            document.addEventListener('sonata-collection-item-added', function() {
                setTimeout(initQuillEditors, 100);
            });
        });

        function initQuillEditors() {
            document.querySelectorAll('textarea.rich-text-editor:not(.quill-initialized)').forEach(function(textarea) {
                // Mark as initialized
                textarea.classList.add('quill-initialized');

                // Create Quill container
                const editorDiv = document.createElement('div');
                editorDiv.style.minHeight = '300px';
                textarea.parentNode.insertBefore(editorDiv, textarea);
                textarea.style.display = 'none';

                // Initialize Quill with full toolbar + emoji
                const quill = new Quill(editorDiv, {
                    theme: 'snow',
                    modules: {
                        toolbar: [
                            // Header styles
                            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

                            // Font and size
                            [{ 'font': [] }],
                            [{ 'size': ['small', false, 'large', 'huge'] }],

                            // Text formatting
                            ['bold', 'italic', 'underline', 'strike'],

                            // Colors
                            [{ 'color': [] }, { 'background': [] }],

                            // Superscript/subscript
                            [{ 'script': 'sub'}, { 'script': 'super' }],

                            // Lists
                            [{ 'list': 'ordered'}, { 'list': 'bullet' }, { 'list': 'check' }],

                            // Indentation
                            [{ 'indent': '-1'}, { 'indent': '+1' }],

                            // Text alignment
                            [{ 'align': [] }],

                            // Text direction
                            [{ 'direction': 'rtl' }],

                            // Special elements
                            ['blockquote', 'code-block'],

                            // Links and media
                            ['link', 'image', 'video'],

                            // Emoji
                            ['emoji'],

                            // Clean formatting
                            ['clean']
                        ],

                        // Emoji module configuration
                        'emoji-toolbar': true,
                        'emoji-textarea': false,
                        'emoji-shortname': true,

                        clipboard: {
                            matchVisual: false
                        }
                    }
                });

                // Load initial content
                if (textarea.value) {
                    quill.root.innerHTML = textarea.value;
                }

                // Sync with textarea
                quill.on('text-change', function() {
                    textarea.value = quill.root.innerHTML;
                    // Trigger change event for Sonata
                    textarea.dispatchEvent(new Event('change', { bubbles: true }));
                });
            });
        }
    </script>
{% endblock %}
